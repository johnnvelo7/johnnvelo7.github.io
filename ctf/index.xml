<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ctfs on John Velo Site</title>
    <link>https://velosecurity.com/ctf/</link>
    <description>Recent content in Ctfs on John Velo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 06 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://velosecurity.com/ctf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bad Memory - Forensics (MEDIUM) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/bad_memory/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/bad_memory/</guid>
      
      <description>Bad Memory - Writeup The task wants us to recover the password that the user has forgotten. I immediately thought of using volatility since we are working with an image or memory dump.
file image.bin
So straight to action we need to get the hashes
vol -f image.bin windows.hashdump
We need to save these hashes into a text file and fire up john the ripper to crack these hashes.
john --format=NT -w=/usr/share/wordlists/rockyou.</description>
      
    </item>
    
    <item>
      <title>BlackCat - Malware (EASY - not really) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/blackcat/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/blackcat/</guid>
      
      <description>Black Cat - Writeup In this challenge, we were given a zip file containing the malware.
We can already see that the challenge is about decrypting the encrypted files inside the victim-files along with the NOTE.png that tells us what to do.
We can already see the encrypted flag.txt along with some random files inside the “victim-files” folder.
Since this is a CTF challenge, I thought about investing this pictures as well using Aperi&amp;rsquo;Solve, a really good website to automate stenography.</description>
      
    </item>
    
    <item>
      <title>Snake Eater - Malware (EASY) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/snake_eateri/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/snake_eateri/</guid>
      
      <description>Snake Eater - Writeup First things first, to analyze this malware, we need to examine what kind of file it is. Using the file and strings command in kali, it gave me a view of what this file is doing.
strings snake_eater.exe
Here is just the beginning and end of the file. I already see that the file is encrypted in some ways.
In order to find it out, we run the binwalk command in kali to see more what it is doing.</description>
      
    </item>
    
    <item>
      <title>Snake Eater II - Malware (MEDIUM) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/snake_eaterii/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/snake_eaterii/</guid>
      
      <description>Snake Eater II - Writeup After unzipping this file, I checked first what kind of file this malware is.
file snake_eaterII.exe
Seems familiar to the previous challenge so I decided to check it in windows too. We see that It has the same icon as the previous challenge.
I figured that this challenge will have the same thing as the previous challenge so I ran procmon to see what it is doing, perhaps on the same path directory as Snake Eater.</description>
      
    </item>
    
    <item>
      <title>Indirect Payload - Miscellaneous (MEDIUM) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/indirect_payload/</link>
      <pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/indirect_payload/</guid>
      
      <description>Indirect Payload - Writeup Visiting the website we get this page:
Clicking on the button will redirect us to another url:
And then we get error message.
I then decided to see what is happening using burpsuite.
Here I see that we get a new site that we can follow, so I decided to follow it manually, and after 2 more redirections we see the first character of the flag.</description>
      
    </item>
    
  </channel>
</rss>
