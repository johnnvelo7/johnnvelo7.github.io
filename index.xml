<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>John Velo Site</title>
    <link>https://velosecurity.com/</link>
    <description>Recent content on John Velo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 06 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://velosecurity.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bad Memory - Forensics (MEDIUM) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/bad_memory/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/bad_memory/</guid>
      
      <description>Bad Memory - Writeup The task wants us to recover the password that the user has forgotten. I immediately thought of using volatility since we are working with an image or memory dump.
file image.bin
So straight to action we need to get the hashes
vol -f image.bin windows.hashdump
We need to save these hashes into a text file and fire up john the ripper to crack these hashes.
john --format=NT -w=/usr/share/wordlists/rockyou.</description>
      
    </item>
    
    <item>
      <title>Snake Eater - Malware (EASY) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/snake_eateri/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/snake_eateri/</guid>
      
      <description>SNAKE EATER WRITEUP
First things first, to analyze this malware, we need to examine what kind of file it is. Using the file and strings command in kali, it gave me a view of what this file is doing.
Here is just the beginning and end of the file. I already see that the file is encrypted in some ways. In order to find it out, we run the BINWALK -E command in kali to see more what it is doing.</description>
      
    </item>
    
    <item>
      <title>Snake Eater II - Malware (MEDIUM) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/snake_eaterii/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/snake_eaterii/</guid>
      
      <description>SNAKE EATER II WRITEUP
After unzipping this file, I checked first what kind of file this malware is.
Seems familiar to the previous challenge so I decided to check it in windows too. We see that It has the same icon as the previous challenge.
I figured that this challenge will have the same thing as the previous challenge so I ran procmon to see what it is doing, perhaps on the same path directory as Snake Eater.</description>
      
    </item>
    
    <item>
      <title>Indirect Payload - Miscellaneous (MEDIUM) Huntress CTF Writeup</title>
      <link>https://velosecurity.com/ctf/indirect_payload/</link>
      <pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/ctf/indirect_payload/</guid>
      
      <description>INDIRECT PAYLOAD WRITEUP Visiting the website we get this page: Clicking on the button will redirect us to another url:
And then we get error message.
I then decided to see what is happening using burpsuite.
Here I see that we get a new site that we can follow, so I decided to follow it manually, and after 2 more redirections we see the first character of the flag.
This is when I realized that the flag is scattered through all the URLs that we are forced to redirect to.</description>
      
    </item>
    
    <item>
      <title>PATH_WATCHER</title>
      <link>https://velosecurity.com/tools/path_watcher/</link>
      <pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/tools/path_watcher/</guid>
      
      <description>path_watcher CTF TOOL:
https://github.com/johnnvelo7/path_watcher
Monitor a directory for files created and closed after writing events. It displays the contents of the file after it&amp;rsquo;s written. This is useful for CTF&amp;rsquo;s where you need to dynamically analyse a malware especially if the malware is creating and deleting a file (flag.txt) in microseconds.
TAKE NOTE:
This program currently only works for Linux OS, but I&amp;rsquo;ll add support for windows soon.
HOW TO USE: Install the required package (pyinotify): pip install pyinotify or pip3 install pyinotify</description>
      
    </item>
    
    <item>
      <title>Agile Project for school</title>
      <link>https://velosecurity.com/projects/smidig/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/projects/smidig/</guid>
      
      <description>Mobile App for children’s cooking (School Project) – React Native, MongoDB, Android Studio</description>
      
    </item>
    
    <item>
      <title>Home SOC</title>
      <link>https://velosecurity.com/projects/soc/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/projects/soc/</guid>
      
      <description>SOC at home (Work in progress) – ELK Stack, ProxMox, Security Onion, Unify Routers</description>
      
    </item>
    
    <item>
      <title>Personal Site</title>
      <link>https://velosecurity.com/projects/personal-site/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/projects/personal-site/</guid>
      
      <description>Personal Website (Work in progress) – GitHub, React, JavaScript, HTML/CSS</description>
      
    </item>
    
    <item>
      <title>Red Team vs. Blue Team exercise</title>
      <link>https://velosecurity.com/projects/rb-exercise/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/projects/rb-exercise/</guid>
      
      <description>Home Lab for Red &amp;amp; Blue Team Exercises – Security Onion, ProxMox, ELK Stack</description>
      
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://velosecurity.com/bio/me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://velosecurity.com/bio/me/</guid>
      
      <description>~$ whoami: John Velo
24 year old multidisciplinary 3rd year cyber security student with excellent results and a bachelor&amp;rsquo;s degree in entrepreneurship. Former cyber security trainee with experience in SOC (ELK Stack), endpoint security and phishing campaigns at Cyberon Security AS. Strong attention to detail, quick learning capacity and ability to improvise under limited resources. Actively engaged in the CTF environment and holds the position of vice president of Oslo CTF.</description>
      
    </item>
    
  </channel>
</rss>
